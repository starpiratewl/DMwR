## import the data
library(DMwR)

head(algae)

## get the general idea about the dataset
summary(algae)

## view the distribution of data concerning to a specific variable
hist(algae$mxPH, prob = T)

hist(algae$mxPH, prob = F) ## this will give the counts of frequency

## view Q-Q map to see if the distribution of a specific variable conform to the normal distribution
library(car)
par(mfrow = c(1,2))     ## set the figures to show at one row and two columns
hist(algae$mxPH, prob = T, xlab = "", main = "Histgram of maximum pH value", ylim = 0:1)
lines(density(algae$mxPH,na.rm = T))      ## add a smooth line of the distribution of the data
rug(jitter(algae$mxPH))                  ## add the density dots under the X axis to help to find the outliers
qq.plot(algae$mxPH, main = "Normal QQ plot of maximum pH")    ## the dots in the dash lines are indicating the data fitted in the 95% confidence intervl, the dots are not in the dash lines are indicating the data which do not conform to the normal distribution.
par(mfrow = c(1,1))



## view the distribution of data concerning to a specific variable via boxplot
boxplot(algae$oPO4, ylab = "Orthophosphate (oOP4)")
rug(jitter(algae$oPO4), side= 2)
abline(h = mean(algae$oPO4, na.rm = T), lty = 2)


## identify the outliers of the dataset
plot(algae$NH4, xlab = "")
abline(h = mean(algae$NH4, na.rm = T), lty = 1)
abline(h = mean(algae$NH4, na.rm = T) + sd(algae$NH4, na.rm = T), lty = 2)
identify(algae$NH4)
## press esc or right click to quit the identification of the dots(the number of rows of the dot you identified will appear on the plot)


## examine the dots you identified on the plot\
plot(algae$NH4, xlab = "")
clicked.lines <- identify(algae$NH4)
algae[clicked.lines, ]


## identify the rows which NH4 is more than 19000
algae[algae$NH4 > 19000, ]
##     season   size speed mxPH mnO2     Cl   NO3   NH4 oPO4 PO4 Chla  a1 a2 a3  a4  a5   a6 a7
##NA     <NA>   <NA>  <NA>   NA   NA     NA    NA    NA   NA  NA   NA  NA NA NA  NA  NA   NA NA
##153  autumn medium  high  7.3 11.8 44.205 45.65 24064   44  34 53.1 2.2  0  0 1.2 5.9 77.6  0
##NA.1   <NA>   <NA>  <NA>   NA   NA     NA    NA    NA   NA  NA   NA  NA NA NA  NA  NA   NA NA
##there are NAs in the result here, this is not the form we prefer, so the alternative solution is as follows:

algae[!is.na(algae$NH4)&algae$NH4 > 19000, ]
##    season   size speed mxPH mnO2     Cl   NO3   NH4 oPO4 PO4 Chla  a1 a2 a3  a4  a5   a6 a7
##153 autumn medium  high  7.3 11.8 44.205 45.65 24064   44  34 53.1 2.2  0  0 1.2 5.9 77.6  0



## use lattice to examine the data distribution of certain variables according to nominal variables
library(lattice)
bwplot(size ~ a1, data = algae, ylab = "River Size", xlab = "Algae A1")
## through this figure we can find that a1 has high frequency in small rivers, this is very useful statistical information


##use Hmisc package to achieve similar result as above mentioned.
library(Hmisc)
bwplot(size ~ a1, data = algae, panel = panel.bpplot, probs=seq(0.01,0.49,by = 0.01), datadensity = T, ylab = "River Size", xlab = "Algae A1")


##to view the data distribution of a variable according to two other variables
minO2 <- equal.count(na.omit(algae$mnO2), number = 4, overlap = 1/5)
stripplot(season ~ a3|minO2, data = algae[!is.na(algae$mnO2), ])
## here we use equal.count() function to turn the numeric variables to nominal variables




#############################################
## deal with the NAs
#############################################

#############################################
##1, omit method
#############################################

library(DMwR)
data(algae)

##examine the number of NAs, here we find that there are 16 rows containing NAs
algae[!complete.cases(algae),]
nrow(algae[!complete.cases(algae),])

## simply remove all the rows containing NAs
algae_nona <- na.omit(algae)

## sometimes if an observation(row) containing too many NAs, this observation is not useful, it is better to remove it
algae_test <- algae[-c(62,199), ]

## but the method mentioned above is unrealizable when we deal a large dataset, we can not to count all the row numbers of NAs
apply(algae, 1, function(x) sum(is.na(x)))
## here we use apply() function to apply to rows to calculate the NAs of each row.

## or we can use mangNAs() function to pin point the row numbers of the rows containing too many NAs(note that manyNAs() function is not a default function in R, it is created in DMwR package)
data(algae)
manyNAs(algae,0.2)
##in this function wo input the dataset(algae) and the percentage(0.2, means NAs are over 20% of all the variables), then the function will return the rows which fitted the condition.
##remove the NAs with the help of manyNAs() fcuntion
algae_test <- algae[-manyNAs(algae,0.2), ]



#############################################
##2, filling method
#############################################

## substitute the NA with mean, this method fit the variables which conform to the normal distribution, because all the observation are distributed equably around the mean
algae[48,"mxPH"] <- mean(algae$mxPH, na.rm = T)

## substitute the NAs with batch processing
## if the variables do not conform to normal distribution, it not suitable to substitute the NA with mean, because the data distribution has bias, under this circumstance, median is a better choice.
algae[is.na(algae$Chla),"Chla"] <- median(algae$Chla, na,rm = T)














